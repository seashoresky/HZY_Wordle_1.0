{"ast":null,"code":"var _jsxFileName = \"/Users/seashore/Desktop/Program/WordleProgram/wordle3prac/src/components/Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Letter(_ref) {\n  _s();\n\n  let {\n    attemptVal,\n    letterPos\n  } = _ref;\n  const {\n    board,\n    correctWord,\n    currAttempt,\n    disabledWord,\n    setDisabledWord\n  } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord[letterPos] === letter;\n  const almost = !correct && correctWord.includes(letter);\n  const wrong = !correct && !almost; // if(wrong) {\n  //   setDisabledWord(prev => [...prev, letter])\n  // }\n\n  const letterState = currAttempt.attempt > attemptVal && (correct ? 'correct' : almost ? 'almost' : 'wrong');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `letter ${letterState}`,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Letter, \"nmMIy1ds90KgwO7NWxmauhoVJfc=\");\n\n_c = Letter;\nexport default Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","AppContext","Letter","attemptVal","letterPos","board","correctWord","currAttempt","disabledWord","setDisabledWord","letter","correct","almost","includes","wrong","letterState","attempt"],"sources":["/Users/seashore/Desktop/Program/WordleProgram/wordle3prac/src/components/Letter.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { AppContext } from '../App'\n\nfunction Letter({attemptVal, letterPos}) {\n  const {\n    board,\n    correctWord, \n    currAttempt, \n    disabledWord,\n    setDisabledWord\n  } = useContext(AppContext)\n\n  const letter = board[attemptVal][letterPos]  \n\n  const correct = correctWord[letterPos] === letter\n  const almost = !correct && correctWord.includes(letter)\n  const wrong = !correct && !almost\n\n  // if(wrong) {\n  //   setDisabledWord(prev => [...prev, letter])\n  // }\n  const letterState = currAttempt.attempt > attemptVal &&\n    (correct ? 'correct': almost? 'almost' : 'wrong')\n  return (\n    <div className={`letter ${letterState}`}>\n        {letter}\n    </div>\n  )\n}\n\nexport default Letter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,SAASC,MAAT,OAAyC;EAAA;;EAAA,IAAzB;IAACC,UAAD;IAAaC;EAAb,CAAyB;EACvC,MAAM;IACJC,KADI;IAEJC,WAFI;IAGJC,WAHI;IAIJC,YAJI;IAKJC;EALI,IAMFT,UAAU,CAACC,UAAD,CANd;EAQA,MAAMS,MAAM,GAAGL,KAAK,CAACF,UAAD,CAAL,CAAkBC,SAAlB,CAAf;EAEA,MAAMO,OAAO,GAAGL,WAAW,CAACF,SAAD,CAAX,KAA2BM,MAA3C;EACA,MAAME,MAAM,GAAG,CAACD,OAAD,IAAYL,WAAW,CAACO,QAAZ,CAAqBH,MAArB,CAA3B;EACA,MAAMI,KAAK,GAAG,CAACH,OAAD,IAAY,CAACC,MAA3B,CAbuC,CAevC;EACA;EACA;;EACA,MAAMG,WAAW,GAAGR,WAAW,CAACS,OAAZ,GAAsBb,UAAtB,KACjBQ,OAAO,GAAG,SAAH,GAAcC,MAAM,GAAE,QAAF,GAAa,OADvB,CAApB;EAEA,oBACE;IAAK,SAAS,EAAG,UAASG,WAAY,EAAtC;IAAA,UACKL;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAzBQR,M;;KAAAA,M;AA2BT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}