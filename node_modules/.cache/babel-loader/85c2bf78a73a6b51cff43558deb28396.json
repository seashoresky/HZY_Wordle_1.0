{"ast":null,"code":"var _jsxFileName = \"/Users/seashore/Desktop/HZY_Wordle/HZY_Wordle_1.0/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport Keyboard from './components/Keyboard';\nimport { boardDefault, generateWords } from './Word';\nimport Tips from './components/Tips';\nimport GameOver from './GameOver';\nimport Confetti from 'react-confetti';\nimport GameFail from './components/GameFail';\nimport ReactSwitch from 'react-switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [correctWord, setCorrectWord] = useState('');\n  const [Wordset, setWordset] = useState(new Set());\n  const [disabledWord, setDisabledWord] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    gussed: false\n  });\n  const [theme, setTheme] = useState('light');\n  let attemptPosition = currAttempt.attempt;\n  let letterPosition = currAttempt.letter;\n  useEffect(() => {\n    generateWords().then(words => {\n      setWordset(words.wordSet);\n      setCorrectWord(words.todaysWord);\n    });\n  }, []);\n\n  function toggleTheme() {\n    setTheme(curr => curr === 'light' ? 'dark' : 'light');\n  }\n\n  function onDelete() {\n    if (letterPosition === 0) return;\n    let newBoard = [...board];\n    newBoard[attemptPosition][letterPosition - 1] = '';\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letter: letterPosition - 1\n    });\n  }\n\n  function onEnter() {\n    if (letterPosition !== 5) return;\n    let currWord = '';\n\n    for (let i = 0; i < 5; i++) {\n      currWord += board[attemptPosition][i];\n    }\n\n    if (currWord === correctWord) {\n      setGameOver({\n        gameOver: true,\n        gussed: true\n      });\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      });\n      return;\n    }\n\n    if (attemptPosition === 4) {\n      setGameOver({\n        gameOver: true,\n        gussed: false\n      });\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      });\n      return;\n    }\n\n    if (Wordset.has(currWord)) {\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      });\n    } else {\n      alert('小可爱，你确定这是个词儿吗？');\n    }\n  }\n\n  function onInput(keyVal) {\n    if (letterPosition === 5) return;\n    let newBoard = [...board];\n    newBoard[attemptPosition][letterPosition] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letter: letterPosition + 1\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    id: theme,\n    children: [gameOver.gussed && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(ReactSwitch, {\n        onChange: toggleTheme,\n        checked: theme === 'dark'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: theme === 'light' ? 'light' : 'dark'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HZY's Wordle \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u26A1\\uFE0FBeta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lightSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"light red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"light orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"light green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onDelete,\n        onEnter,\n        onInput,\n        correctWord,\n        Wordset,\n        disabledWord,\n        setDisabledWord,\n        gameOver,\n        setGameOver\n      },\n      children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), gameOver.gameOver && gameOver.gussed ? /*#__PURE__*/_jsxDEV(GameOver, {\n        answer: correctWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 52\n      }, this) : gameOver.gameOver && !gameOver.gussed ? /*#__PURE__*/_jsxDEV(GameFail, {\n        answer: correctWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Tips, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rr0eqak/9r1vbLBIP6mpDBSUTxQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","Board","Keyboard","boardDefault","generateWords","Tips","GameOver","Confetti","GameFail","ReactSwitch","AppContext","App","board","setBoard","currAttempt","setCurrAttempt","attempt","letter","correctWord","setCorrectWord","Wordset","setWordset","Set","disabledWord","setDisabledWord","gameOver","setGameOver","gussed","theme","setTheme","attemptPosition","letterPosition","then","words","wordSet","todaysWord","toggleTheme","curr","onDelete","newBoard","onEnter","currWord","i","has","alert","onInput","keyVal"],"sources":["/Users/seashore/Desktop/HZY_Wordle/HZY_Wordle_1.0/src/App.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport Keyboard from './components/Keyboard';\nimport { boardDefault, generateWords } from './Word';\nimport Tips from './components/Tips';\nimport GameOver from './GameOver';\nimport Confetti from 'react-confetti';\nimport GameFail from './components/GameFail';\nimport ReactSwitch from 'react-switch';\n\nexport const AppContext = createContext();\nfunction App() {\n  const [board,setBoard] = useState(boardDefault)\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt:0,\n    letter:0\n  })\n  const [correctWord, setCorrectWord] = useState('')\n  const [Wordset, setWordset] = useState(new Set())\n  const [disabledWord, setDisabledWord] = useState([])\n  const [gameOver, setGameOver] = useState({\n    gameOver:false,\n    gussed: false\n  })\n  const [theme, setTheme] = useState('light')\n  \n  let attemptPosition = currAttempt.attempt;\n  let letterPosition = currAttempt.letter;\n\n  useEffect(() => {\n    generateWords()\n      .then(words => {\n        setWordset(words.wordSet)\n        setCorrectWord(words.todaysWord)\n      })\n  },[])\n\n  function toggleTheme() {\n    setTheme(curr => (curr === 'light'?'dark':'light'))\n  }\n\n  function onDelete() {\n    if(letterPosition === 0) return;\n      let newBoard = [...board];\n      newBoard[attemptPosition][letterPosition - 1] =''\n      setBoard(newBoard)\n      setCurrAttempt({\n        ...currAttempt,\n        letter: letterPosition - 1\n      })\n  }\n  function onEnter() {\n    if(letterPosition !== 5) return;\n    let currWord = ''\n    for(let i = 0; i < 5; i++) {\n      currWord += board[attemptPosition][i]\n    }\n    if(currWord === correctWord) {\n      setGameOver({\n        gameOver:true,\n        gussed:true\n      })\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      })\n      return;\n    }\n    if(attemptPosition === 4) {\n      setGameOver({\n        gameOver:true,\n        gussed:false\n      })\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      })\n      return;\n    }\n    if(Wordset.has(currWord)) {\n      setCurrAttempt({\n        attempt: attemptPosition + 1,\n        letter: 0\n      })\n    }  else {\n      alert('小可爱，你确定这是个词儿吗？')\n    }\n  }\n\n  function onInput(keyVal) {\n    if(letterPosition === 5) return;\n      let newBoard = [...board];\n      newBoard[attemptPosition][letterPosition] = keyVal\n      setBoard(newBoard)\n      setCurrAttempt({\n        ...currAttempt,\n        letter: letterPosition + 1\n      })\n  }\n\n  return (\n    <div className=\"App\" id={theme}>\n      {gameOver.gussed && <Confetti />}\n      <div className='switch'>\n          <ReactSwitch \n            onChange={toggleTheme}\n            checked={theme === 'dark'}\n          />\n          <label>{theme === 'light'?'light':'dark'}</label>\n        </div>\n      <nav>\n        \n        <h1>HZY's Wordle </h1>\n        <div className='title'>\n          <p>⚡️Beta</p>\n          <div className='lightSet'>\n            <div className='light red'></div>\n            <div className='light orange'></div>\n            <div className='light green'></div>\n          </div>\n          \n        </div>\n      </nav>\n      <AppContext.Provider value={{\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onDelete,\n        onEnter,\n        onInput,\n        correctWord,\n        Wordset,\n        disabledWord,\n        setDisabledWord,\n        gameOver,\n        setGameOver\n      }}>\n        <Board />\n       \n        {\n          (gameOver.gameOver && gameOver.gussed) ? <GameOver answer={correctWord}/> :\n          (gameOver.gameOver && !gameOver.gussed) ? <GameFail answer={correctWord}/> :\n          <div>\n            <Tips/>\n            <Keyboard />\n          </div>  \n        }\n       {/* { `@HZY 觉得这个App还少个首页、暗黑模式还有个bug`} */}\n      </AppContext.Provider> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}